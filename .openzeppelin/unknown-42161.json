{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xdA0a57B710768ae17941a9Fa33f8B720c8bD9ddD",
      "txHash": "0xbd82045ed222dbc4ae8cf4e78445ea642498f3c52fb2d61fcbce4e53323a873b",
      "kind": "uups"
    },
    {
      "address": "0xC606157CdBEb8e0BDB273E40D6Ee96e151083194",
      "txHash": "0xb658da3f5652cab018dc8231d3cbfb0d099cf62eefed0ee2573fab6540dd7dae",
      "kind": "uups"
    },
    {
      "address": "0x1f3Fe1E2a752cF6732C8be849a424482639EffC9",
      "txHash": "0x43aeb314cf0da5dd333c62580f46acbfa10216d28953dda2ae058fd4f74ed552",
      "kind": "uups"
    },
    {
      "address": "0xfB1F3fFa0d9819Da45D4E91967D46fAF025aa1c3",
      "txHash": "0x4488e5b3be4fa1344b204e3f09da8b8fd453eeb6a9aa936be1bca7b9efa1cb9c",
      "kind": "uups"
    },
    {
      "address": "0xc2033B3Ea8C226461ac7408BA948806F09148788",
      "txHash": "0x1dbcca630f8e6f557bdee92f45562ec7d5fc20511dd40df09501b99e367cb422",
      "kind": "uups"
    },
    {
      "address": "0xf90490186F370f324DEF2871F077668455f65253",
      "txHash": "0x04d77c2a97eb745946b253fd6b93605d936f10fe78764c1f3bab3184af2f5ce5",
      "kind": "uups"
    },
    {
      "address": "0xbF6130Dc424332AaE55709DB39638EcA25F0EB5b",
      "txHash": "0xbd2c2e8fff31d9e936048303417665facae3da2491bc6a7c34323b5388ee181d",
      "kind": "uups"
    },
    {
      "address": "0x6727C909ee7d87CD6E60116f9B7363eC4613A27a",
      "txHash": "0x6ce5db700d2fcb2d3939d0657d23c07b41f9c05021f3f10b2d14b1de63591712",
      "kind": "uups"
    },
    {
      "address": "0xE4E164788E5a0d84f063c7EccBC8D479196315e1",
      "txHash": "0x3a4bd9641993ea88df503a356d84ee69060513fda2f25bc1da059a0a010d5d01",
      "kind": "uups"
    },
    {
      "address": "0x7Cf89b836d1C647Ef31a5eeb152B7aDDCf002a08",
      "txHash": "0xdaa8022c58c3de400ec9253aaa6e1840c5df8f7c1f1e184b762016a71c2ed179",
      "kind": "uups"
    },
    {
      "address": "0x462C01b85c8356ab83EBE276F3283B1F21cE7FCb",
      "txHash": "0x59c17a7ce1e883c197ec8fc5e8da76d0f2355324f8cf18b59624dcc2005f0477",
      "kind": "uups"
    },
    {
      "address": "0x298222e9f54396e70EE1EB2FB58aad4e7Da1f878",
      "txHash": "0x1bc446306f78794ed38515be41d186d75a56dac80fca49e799f293c183f9167b",
      "kind": "uups"
    },
    {
      "address": "0xf1E4c2d4B2996C7c34b5a6136861D7385Cb0E843",
      "txHash": "0xdf8255e93557111fefc1550ee2345bd7890a5a7bee6542825d347b5f814185ef",
      "kind": "uups"
    },
    {
      "address": "0x9d95D61eA056721E358BC49fE995caBF3B86A34B",
      "txHash": "0x2afbf29d1c33515c274ebd8fe803626137a07c47709a477378f8c67bf77c9d09",
      "kind": "uups"
    }
  ],
  "impls": {
    "f74e386a47270dc8ad76030b5e74c58303f7c75ee85780a66c052c820e41ee51": {
      "address": "0x8b0bCa2bb41B126A2bd43453Cc0C25a4b8f7Cc31",
      "txHash": "0xbbf94656819a753a0b74700013e7f3693758bd38abbd9bc51fc51d71e8ee7300",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:13"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:43"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Pond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/Pond.sol:27"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "85adb48ac21de14bf9f862f018b680f9fc5c9b000072cf24b5a201726a85475e": {
      "address": "0xd48d6a0CBD51fe974F840b4F4c591EB2B0730Fc2",
      "txHash": "0x12607e91176b0054b199389d8c37ed750d5c7576f17de6f1617f0358e0a548ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "MPond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/MPond.sol:35"
          },
          {
            "contract": "MPond",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:67"
          },
          {
            "contract": "MPond",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:91"
          },
          {
            "contract": "MPond",
            "label": "allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:127"
          },
          {
            "contract": "MPond",
            "label": "balances",
            "type": "t_mapping(t_address,t_struct(Balance)3560_storage)",
            "src": "contracts/MPond.sol:137"
          },
          {
            "contract": "MPond",
            "label": "__gap3",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:139"
          },
          {
            "contract": "MPond",
            "label": "delegates",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:352"
          },
          {
            "contract": "MPond",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MPond.sol:355"
          },
          {
            "contract": "MPond",
            "label": "__gap4",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:357"
          },
          {
            "contract": "MPond",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)4490_storage))",
            "src": "contracts/MPond.sol:540"
          },
          {
            "contract": "MPond",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/MPond.sol:543"
          },
          {
            "contract": "MPond",
            "label": "__gap5",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:545"
          },
          {
            "contract": "MPond",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:674"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
            "label": "mapping(address => mapping(address => uint96))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint96)": {
            "label": "mapping(address => uint96)"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_struct(Balance)3560_storage)": {
            "label": "mapping(address => struct MPond.Balance)"
          },
          "t_struct(Balance)3560_storage": {
            "label": "struct MPond.Balance",
            "members": [
              {
                "label": "undelegated",
                "type": "t_uint96"
              },
              {
                "label": "token",
                "type": "t_uint96"
              },
              {
                "label": "__unused",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)4490_storage))": {
            "label": "mapping(address => mapping(uint32 => struct MPond.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)4490_storage)": {
            "label": "mapping(uint32 => struct MPond.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)4490_storage": {
            "label": "struct MPond.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8137288b7dd833b49699769c3e90cb3770c4ad4bab315ff9ea3268dbdeea93b5": {
      "address": "0x3Bc0BF6785d349eD506342834D27E801f6A7D290",
      "txHash": "0x5810224dc2dc63f8a87a82312a222cf0b0319d411141de23a8330c105a177b10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ClusterRegistry",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/ClusterRegistry.sol:22"
          },
          {
            "contract": "ClusterRegistry",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/ClusterRegistry.sol:57"
          },
          {
            "contract": "ClusterRegistry",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)6060_storage)",
            "src": "contracts/staking/ClusterRegistry.sol:87"
          },
          {
            "contract": "ClusterRegistry",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/ClusterRegistry.sol:88"
          },
          {
            "contract": "ClusterRegistry",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)6131_storage)",
            "src": "contracts/staking/ClusterRegistry.sol:113"
          },
          {
            "contract": "ClusterRegistry",
            "label": "clientKeys",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/staking/ClusterRegistry.sol:114"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)6060_storage)": {
            "label": "mapping(bytes32 => struct ClusterRegistry.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)6060_storage": {
            "label": "struct ClusterRegistry.Lock",
            "members": [
              {
                "label": "unlockBlock",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(Cluster)6131_storage)": {
            "label": "mapping(address => struct ClusterRegistry.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)6131_storage": {
            "label": "struct ClusterRegistry.Cluster",
            "members": [
              {
                "label": "networkId",
                "type": "t_bytes32"
              },
              {
                "label": "commission",
                "type": "t_uint256"
              },
              {
                "label": "rewardAddress",
                "type": "t_address"
              },
              {
                "label": "clientKey",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(Status)6119"
              }
            ]
          },
          "t_enum(Status)6119": {
            "label": "enum ClusterRegistry.Status",
            "members": ["NOT_REGISTERED", "REGISTERED"]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ad641cf4aa7a3223f8eca25b09c62d3ff9386e09125042977ee868a43139045e": {
      "address": "0x34488cb5872fc324c56B0f480f7610a313fE89De",
      "txHash": "0xb522074f4e4db137380ad98a23a704083da461d9180ac0ca3ac2ae1007f92364",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/RewardDelegators.sol:26"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/RewardDelegators.sol:61"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)8450_storage)",
            "src": "contracts/staking/RewardDelegators.sol:118"
          },
          {
            "contract": "RewardDelegators",
            "label": "stakeAddress",
            "type": "t_address",
            "src": "contracts/staking/RewardDelegators.sol:120"
          },
          {
            "contract": "RewardDelegators",
            "label": "rewardFactor",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:121"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:122"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/RewardDelegators.sol:123"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRewards",
            "type": "t_contract(IClusterRewards)8013",
            "src": "contracts/staking/RewardDelegators.sol:124"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRegistry",
            "type": "t_contract(IClusterRegistry)7900",
            "src": "contracts/staking/RewardDelegators.sol:125"
          },
          {
            "contract": "RewardDelegators",
            "label": "PONDToken",
            "type": "t_contract(IERC20Upgradeable)1834",
            "src": "contracts/staking/RewardDelegators.sol:126"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Cluster)8450_storage)": {
            "label": "mapping(address => struct RewardDelegators.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)8450_storage": {
            "label": "struct RewardDelegators.Cluster",
            "members": [
              {
                "label": "totalDelegations",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "delegators",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "rewardDebt",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(IClusterRewards)8013": {
            "label": "contract IClusterRewards"
          },
          "t_contract(IClusterRegistry)7900": {
            "label": "contract IClusterRegistry"
          },
          "t_contract(IERC20Upgradeable)1834": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a507258056d3cbf4821f94b3b57068d06b6ed115e287ba795ba9e70c0e221583": {
      "address": "0x3D3AF827d94743780CAbDFb6Af8CD47FA30F93c9",
      "txHash": "0x5ee822c10c39c0c82a25e6099588a424fcec09efe82771a32bb27c40790270a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ClusterRewards",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/ClusterRewards.sol:23"
          },
          {
            "contract": "ClusterRewards",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/ClusterRewards.sol:58"
          },
          {
            "contract": "ClusterRewards",
            "label": "clusterRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/staking/ClusterRewards.sol:102"
          },
          {
            "contract": "ClusterRewards",
            "label": "rewardWeight",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/ClusterRewards.sol:104"
          },
          {
            "contract": "ClusterRewards",
            "label": "totalWeight",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:105"
          },
          {
            "contract": "ClusterRewards",
            "label": "totalRewardsPerEpoch",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:106"
          },
          {
            "contract": "ClusterRewards",
            "label": "payoutDenomination",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:107"
          },
          {
            "contract": "ClusterRewards",
            "label": "rewardDistributedPerEpoch",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/staking/ClusterRewards.sol:109"
          },
          {
            "contract": "ClusterRewards",
            "label": "latestNewEpochRewardAt",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:110"
          },
          {
            "contract": "ClusterRewards",
            "label": "rewardDistributionWaitTime",
            "type": "t_uint256",
            "src": "contracts/staking/ClusterRewards.sol:111"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7befbb1b86c0ca1ce2a5b5cc00f80c4ce7542cecd137c418273213304aea288e": {
      "address": "0xb6A073D8C4295A7Eb8402B685f7C3E12D57C8Ab7",
      "txHash": "0xd78cb9d9cad872511b89eb7c5a18b7a3f712b4f3d5a300a9dd6da9bb984e3519",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)9649_storage)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:110"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:112"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:196"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:198"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)10353_storage)",
            "src": "contracts/staking/StakeManager.sol:311"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:313"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)8167",
            "src": "contracts/staking/StakeManager.sol:315"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:317"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:435"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:684"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)9649_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)9649_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)10353_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)10353_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)8167": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4bec6d937f06aa42176f10aadba9c0ce63ca34269f2f2ded3fb0006983adc18c": {
      "address": "0xb4DCB50187610f5be12CF89698B5bE23C3F22526",
      "txHash": "0x0c9881cbd58983f8e3e6114b4c2e1702b5601f4be39a5b0ef7caf349875759d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:26"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:61"
          },
          {
            "contract": "L2Gateway",
            "label": "tokenL2",
            "type": "t_contract(IERC20)3322",
            "src": "contracts/arbBridge/L2Gateway.sol:84"
          },
          {
            "contract": "L2Gateway",
            "label": "gatewayL1",
            "type": "t_address",
            "src": "contracts/arbBridge/L2Gateway.sol:85"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:87"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IERC20)3322": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "be936c84718741384c5298c38ef206df5dc6d237bdb42c2788e90bf19f5bb0be": {
      "address": "0x1b26A0d0C1D859FC4DB18730b4743B483ED3f970",
      "txHash": "0xf51f6d740cc481d3968a8ad9edd777311cea9f9a5ec284f8d6e6f3d21ff86831",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)9790_storage)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:110"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:112"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:196"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:198"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)10494_storage)",
            "src": "contracts/staking/StakeManager.sol:311"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:313"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)8183",
            "src": "contracts/staking/StakeManager.sol:315"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:317"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:437"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:686"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)9790_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)9790_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)10494_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)10494_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)8183": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "508c879c522af221bbab0df5aaeaf944f7f936bdd51dc04f1d60f6d0e5ed0712": {
      "address": "0x53D698d543BE1d8E5c73a2406c209E26095f2284",
      "txHash": "0xfb38e593266fc09a34206a5ec5d8d612cfa75d42078ce98e998e6a636a864ffe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/RewardDelegators.sol:26"
          },
          {
            "contract": "RewardDelegators",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/RewardDelegators.sol:61"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusters",
            "type": "t_mapping(t_address,t_struct(Cluster)8450_storage)",
            "src": "contracts/staking/RewardDelegators.sol:118"
          },
          {
            "contract": "RewardDelegators",
            "label": "stakeAddress",
            "type": "t_address",
            "src": "contracts/staking/RewardDelegators.sol:120"
          },
          {
            "contract": "RewardDelegators",
            "label": "rewardFactor",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:121"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/RewardDelegators.sol:122"
          },
          {
            "contract": "RewardDelegators",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/RewardDelegators.sol:123"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRewards",
            "type": "t_contract(IClusterRewards)8013",
            "src": "contracts/staking/RewardDelegators.sol:124"
          },
          {
            "contract": "RewardDelegators",
            "label": "clusterRegistry",
            "type": "t_contract(IClusterRegistry)7900",
            "src": "contracts/staking/RewardDelegators.sol:125"
          },
          {
            "contract": "RewardDelegators",
            "label": "PONDToken",
            "type": "t_contract(IERC20Upgradeable)1834",
            "src": "contracts/staking/RewardDelegators.sol:126"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Cluster)8450_storage)": {
            "label": "mapping(address => struct RewardDelegators.Cluster)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Cluster)8450_storage": {
            "label": "struct RewardDelegators.Cluster",
            "members": [
              {
                "label": "totalDelegations",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "delegators",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "rewardDebt",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(IClusterRewards)8013": {
            "label": "contract IClusterRewards"
          },
          "t_contract(IClusterRegistry)7900": {
            "label": "contract IClusterRegistry"
          },
          "t_contract(IERC20Upgradeable)1834": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2957_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2957_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2656_storage"
              }
            ]
          },
          "t_struct(Set)2656_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "08b48f1652b9914edf74bb0186fc82b14006f56ea12c55c32f5fde99f3c8f964": {
      "address": "0x31FB91ae83898A73391A469dCA4BF6C35d82e74e",
      "txHash": "0xbe6ff4180d5787a4c1c94f8f4392629d9fe76d339c7670852f76afd4a3be4cfd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2105_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:26"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:61"
          },
          {
            "contract": "L2Gateway",
            "label": "tokenL2",
            "type": "t_contract(IERC20)2470",
            "src": "contracts/arbBridge/L2Gateway.sol:84"
          },
          {
            "contract": "L2Gateway",
            "label": "gatewayL1",
            "type": "t_address",
            "src": "contracts/arbBridge/L2Gateway.sol:85"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:87"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IERC20)2470": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2105_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2105_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1804_storage"
              }
            ]
          },
          "t_struct(Set)1804_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4f7aa1e23a322856982184bb0d396d7e3c60348325b0a6bd4fc9946fc075e183": {
      "address": "0x4c9852F186e0eac2392058e1bF30DdfEA5cdA6c9",
      "txHash": "0xb3d06e217ec0899aa9f2c2ed7347bbf80a2ce9757e0e27e669054c03392abef8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)12886_storage)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:110"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:112"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:196"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:198"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)13602_storage)",
            "src": "contracts/staking/StakeManager.sol:311"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:313"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)11279",
            "src": "contracts/staking/StakeManager.sol:315"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:317"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:437"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:686"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)12886_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)12886_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)13602_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)13602_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)11279": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "648c286435173a8fba9897eef9b10bd8bc4b97375b0d2ad5b2deab64770389ce": {
      "address": "0xf5D9D9279F9b6afFEf8b63408c941aA0856D60Af",
      "txHash": "0xc5c14f0b6eab9cd3d787abc68aecba0957ad9a4e405b48d24ab32d52b114a759",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Bridge",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/Bridge.sol:23"
          },
          {
            "contract": "Bridge",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/Bridge.sol:62"
          },
          {
            "contract": "Bridge",
            "label": "liquidityBp",
            "type": "t_uint256",
            "src": "contracts/Bridge.sol:89"
          },
          {
            "contract": "Bridge",
            "label": "lockTimeEpochs",
            "type": "t_uint256",
            "src": "contracts/Bridge.sol:90"
          },
          {
            "contract": "Bridge",
            "label": "liquidityEpochLength",
            "type": "t_uint256",
            "src": "contracts/Bridge.sol:91"
          },
          {
            "contract": "Bridge",
            "label": "mpond",
            "type": "t_contract(MPond)7316",
            "src": "contracts/Bridge.sol:93"
          },
          {
            "contract": "Bridge",
            "label": "pond",
            "type": "t_contract(Pond)7502",
            "src": "contracts/Bridge.sol:94"
          },
          {
            "contract": "Bridge",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/Bridge.sol:95"
          },
          {
            "contract": "Bridge",
            "label": "liquidityStartTime",
            "type": "t_uint256",
            "src": "contracts/Bridge.sol:96"
          },
          {
            "contract": "Bridge",
            "label": "requests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Requests)3776_storage))",
            "src": "contracts/Bridge.sol:115"
          },
          {
            "contract": "Bridge",
            "label": "claimedAmounts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/Bridge.sol:116"
          },
          {
            "contract": "Bridge",
            "label": "totalAmountPlacedInRequests",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Bridge.sol:117"
          },
          {
            "contract": "Bridge",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/Bridge.sol:119"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(MPond)7316": {
            "label": "contract MPond"
          },
          "t_contract(Pond)7502": {
            "label": "contract Pond"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Requests)3776_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Bridge.Requests))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Requests)3776_storage)": {
            "label": "mapping(uint256 => struct Bridge.Requests)"
          },
          "t_struct(Requests)3776_storage": {
            "label": "struct Bridge.Requests",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "releaseEpoch",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3c3f309f2b9e322a2ca86e69b46d392f47a8519f11f50a765bc94b920c2fd932": {
      "address": "0xf4Bbf8B0111930De4EAd3E2F2096B5BA00E23903",
      "txHash": "0x29d9348f07e2f74069424f417c2f18cbc302091c12c01a67be38d7596962b24d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:31"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:66"
          },
          {
            "contract": "L2Gateway",
            "label": "tokenL2",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/arbBridge/L2Gateway.sol:89"
          },
          {
            "contract": "L2Gateway",
            "label": "gatewayL1",
            "type": "t_address",
            "src": "contracts/arbBridge/L2Gateway.sol:90"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:92"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "33958b819ec3188d65f637b3ee281b962be933dc66892651a101c4f880d16757": {
      "address": "0x0419CAa8b4984ceA4256D4F5da421A4156D9FC2A",
      "txHash": "0x00499675906b42b42cdfa3976ecaac00c4248d230e55a9aa033cee011a3df681",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:31"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:66"
          },
          {
            "contract": "L2Gateway",
            "label": "tokenL2",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/arbBridge/L2Gateway.sol:89"
          },
          {
            "contract": "L2Gateway",
            "label": "gatewayL1",
            "type": "t_address",
            "src": "contracts/arbBridge/L2Gateway.sol:90"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:92"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e9b5777ef80c01cc01d4ca19d44022f36b6ca58a7509d62fdf08f520c7105cb7": {
      "address": "0x84162F233546D4B3ec888183D0b1e0Fd6cE04abC",
      "txHash": "0x1f9e1eab617359f8b4103cdfd889c98577226a24fb0ef713998b3565966e8c8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)13183_storage)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:110"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:112"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:196"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:198"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)13899_storage)",
            "src": "contracts/staking/StakeManager.sol:311"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:313"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)11576",
            "src": "contracts/staking/StakeManager.sol:315"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:317"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:437"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:702"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)13183_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)13183_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)13899_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)13899_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)11576": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a78ce378ed080adb127ff7af44cf3dbd422c5ffa75bce5e5621fb5ef34da07bd": {
      "address": "0x4EeC0929af8B67b36AE1F609fAdE49ce1Cf9ab77",
      "txHash": "0x8439323cb6b4a9661d53bf6cb41a056ce6270dba610a6a970595e6b461fbe62b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:31"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:66"
          },
          {
            "contract": "L2Gateway",
            "label": "tokenL2",
            "type": "t_contract(IERC20)3546",
            "src": "contracts/arbBridge/L2Gateway.sol:89"
          },
          {
            "contract": "L2Gateway",
            "label": "gatewayL1",
            "type": "t_address",
            "src": "contracts/arbBridge/L2Gateway.sol:90"
          },
          {
            "contract": "L2Gateway",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/arbBridge/L2Gateway.sol:92"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IERC20)3546": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c9a4474bd3e8c57db1a268a6654b7770cb72332fd7532c47eeb83c9ffd001011": {
      "address": "0x4085E757cbb729251f6605EBAfB533BA7865dD3E",
      "txHash": "0x4910c71a16896207aa49732c3fb69036c6dd7bfa4044e76b5d247e758a0b236a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:13"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:43"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Pond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/Pond.sol:30"
          },
          {
            "contract": "Pond",
            "label": "l1Address",
            "type": "t_address",
            "src": "contracts/Pond.sol:85"
          },
          {
            "contract": "Pond",
            "label": "__gap1",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/Pond.sol:86"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "428f0950908cdb520923b0f4508810651a44a3ced03f663a264fb7072bc225c6": {
      "address": "0xD4E0AD5b4D9016f27Ff4dCE59f7B90C7756CcafE",
      "txHash": "0x3d70bb74c93380a1471f8ff86d21ccfb9c975984abcbfb60431695b397706587",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "MPond",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/MPond.sol:37"
          },
          {
            "contract": "MPond",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:69"
          },
          {
            "contract": "MPond",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:93"
          },
          {
            "contract": "MPond",
            "label": "allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:129"
          },
          {
            "contract": "MPond",
            "label": "balances",
            "type": "t_mapping(t_address,t_struct(Balance)5923_storage)",
            "src": "contracts/MPond.sol:139"
          },
          {
            "contract": "MPond",
            "label": "__gap3",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:141"
          },
          {
            "contract": "MPond",
            "label": "delegates",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))",
            "src": "contracts/MPond.sol:354"
          },
          {
            "contract": "MPond",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MPond.sol:357"
          },
          {
            "contract": "MPond",
            "label": "__gap4",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:359"
          },
          {
            "contract": "MPond",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6887_storage))",
            "src": "contracts/MPond.sol:556"
          },
          {
            "contract": "MPond",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/MPond.sol:559"
          },
          {
            "contract": "MPond",
            "label": "__gap5",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/MPond.sol:561"
          },
          {
            "contract": "MPond",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MPond.sol:690"
          },
          {
            "contract": "MPond",
            "label": "l1Address",
            "type": "t_address",
            "src": "contracts/MPond.sol:738"
          },
          {
            "contract": "MPond",
            "label": "__gap7",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/MPond.sol:739"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
            "label": "mapping(address => mapping(address => uint96))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint96)": {
            "label": "mapping(address => uint96)"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_struct(Balance)5923_storage)": {
            "label": "mapping(address => struct MPond.Balance)"
          },
          "t_struct(Balance)5923_storage": {
            "label": "struct MPond.Balance",
            "members": [
              {
                "label": "undelegated",
                "type": "t_uint96"
              },
              {
                "label": "token",
                "type": "t_uint96"
              },
              {
                "label": "__unused",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6887_storage))": {
            "label": "mapping(address => mapping(uint32 => struct MPond.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)6887_storage)": {
            "label": "mapping(uint32 => struct MPond.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)6887_storage": {
            "label": "struct MPond.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ebb46cbaa8708a713769a4b7e584e681f8d5cdf73b260472d366f643ecceb4fc": {
      "address": "0xa940201948a40c5bda3D74B335e1Fc8C3a7E240e",
      "txHash": "0xe389ae8ecb4418f4dd591e8c7bbe4d3d6218169eee5613d0d9f65e0deb1999e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StakeManager",
            "label": "__gap0",
            "type": "t_array(t_uint256)500_storage",
            "src": "contracts/staking/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:61"
          },
          {
            "contract": "StakeManager",
            "label": "locks",
            "type": "t_mapping(t_bytes32,t_struct(Lock)13178_storage)",
            "src": "contracts/staking/StakeManager.sol:108"
          },
          {
            "contract": "StakeManager",
            "label": "lockWaitTime",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:109"
          },
          {
            "contract": "StakeManager",
            "label": "__gap2",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/staking/StakeManager.sol:111"
          },
          {
            "contract": "StakeManager",
            "label": "tokens",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/staking/StakeManager.sol:193"
          },
          {
            "contract": "StakeManager",
            "label": "tokenList",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/staking/StakeManager.sol:194"
          },
          {
            "contract": "StakeManager",
            "label": "tokenIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/staking/StakeManager.sol:195"
          },
          {
            "contract": "StakeManager",
            "label": "__gap3",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:197"
          },
          {
            "contract": "StakeManager",
            "label": "stashes",
            "type": "t_mapping(t_bytes32,t_struct(Stash)13865_storage)",
            "src": "contracts/staking/StakeManager.sol:306"
          },
          {
            "contract": "StakeManager",
            "label": "stashIndex",
            "type": "t_uint256",
            "src": "contracts/staking/StakeManager.sol:308"
          },
          {
            "contract": "StakeManager",
            "label": "rewardDelegators",
            "type": "t_contract(IRewardDelegators)11576",
            "src": "contracts/staking/StakeManager.sol:310"
          },
          {
            "contract": "StakeManager",
            "label": "__gap4",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/staking/StakeManager.sol:312"
          },
          {
            "contract": "StakeManager",
            "label": "__gap5",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:432"
          },
          {
            "contract": "StakeManager",
            "label": "__gap6",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/staking/StakeManager.sol:695"
          }
        ],
        "types": {
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(Lock)13178_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Lock)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Lock)13178_storage": {
            "label": "struct StakeManager.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256"
              },
              {
                "label": "iValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(Stash)13865_storage)": {
            "label": "mapping(bytes32 => struct StakeManager.Stash)"
          },
          "t_struct(Stash)13865_storage": {
            "label": "struct StakeManager.Stash",
            "members": [
              {
                "label": "staker",
                "type": "t_address"
              },
              {
                "label": "delegatedCluster",
                "type": "t_address"
              },
              {
                "label": "amounts",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "__unused_govDelegations",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_contract(IRewardDelegators)11576": {
            "label": "contract IRewardDelegators"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3181_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3181_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2880_storage"
              }
            ]
          },
          "t_struct(Set)2880_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b2c8729db2a457140d6d5fcf3b87bde826121136e5d536093f3262ec51fb2926": {
      "address": "0x35523248b1f95141c935a7fF6C6AeB68F263CEa2",
      "txHash": "0xd401d1b57bc67945f78dd4034cecea6611a2c4b8997c3e6f3aab083862dc84b0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(Snapshots)17692_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:68"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Snapshots)17692_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:70"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)2943_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:208"
          },
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:24"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "901",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:63"
          },
          {
            "label": "signerToStaker",
            "offset": 0,
            "slot": "951",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:92"
          },
          {
            "label": "stakerToSigner",
            "offset": 0,
            "slot": "952",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)17692_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2943_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)17692_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6168b12fa93df7388b4d56fe1bb4a8cdf31d7fc8627c6cc856e06d7dae488e79": {
      "address": "0x272B4B6371E2968b634B18c1800E36D3145C7172",
      "txHash": "0xe97517462d2e775675c1de7485a971d890293214de54c150e85db272f875d26f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(Snapshots)17735_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:68"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Snapshots)17735_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:70"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)2943_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:208"
          },
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:24"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "901",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:63"
          },
          {
            "label": "signerToStaker",
            "offset": 0,
            "slot": "951",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:92"
          },
          {
            "label": "stakerToSigner",
            "offset": 0,
            "slot": "952",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)17735_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2943_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)17735_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c0614031f5fac38a5f91efe731759667774e76e00897cc4404bed354a1b08d9b": {
      "address": "0x86435Ebaf3a3af8118c91Ad504B3f74c9d1Ae5eb",
      "txHash": "0x5578bf01aaadeaaa77376605c6a917fdea61535285de403f563947abdecd9cd3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "addressToIndexMap",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:28"
          },
          {
            "label": "indexToAddressMap",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:31"
          },
          {
            "label": "nodes",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_struct(Node)18079_storage)dyn_storage",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)47_storage",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:36"
          },
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:28"
          },
          {
            "label": "clustersSelected",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:85"
          },
          {
            "label": "rewardForSelectingClusters",
            "offset": 0,
            "slot": "852",
            "type": "t_uint256",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:88"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "853",
            "type": "t_address",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:91"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "854",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Node)18079_storage)dyn_storage": {
            "label": "struct TreeUpgradeable.Node[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Node)18079_storage": {
            "label": "struct TreeUpgradeable.Node",
            "members": [
              {
                "label": "value",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "leftSum",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "rightSum",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "321817b345057c7e271c165f1c560fcaaaa9cff67211d1936b9f103fb26dddaa": {
      "address": "0xaf60020e797c0Ebc14347CA50bFBdef6b8Eb259A",
      "txHash": "0x2c49a3a50f21235cfb8adc0af0b2f18e13afe49d716bc2d4c3782ee8c3ee9ca8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4025_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:27"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:62"
          },
          {
            "label": "clusterRewards",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:120"
          },
          {
            "label": "rewardWeight",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:122"
          },
          {
            "label": "totalRewardWeight",
            "offset": 0,
            "slot": "853",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:123"
          },
          {
            "label": "totalRewardsPerEpoch",
            "offset": 0,
            "slot": "854",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:124"
          },
          {
            "label": "payoutDenomination",
            "offset": 0,
            "slot": "855",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:125"
          },
          {
            "label": "rewardDistributedPerEpoch",
            "offset": 0,
            "slot": "856",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:127"
          },
          {
            "label": "latestNewEpochRewardAt",
            "offset": 0,
            "slot": "857",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:128"
          },
          {
            "label": "rewardDistributionWaitTime",
            "offset": 0,
            "slot": "858",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:129"
          },
          {
            "label": "ticketsIssued",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:131"
          },
          {
            "label": "clusterSelectors",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_bytes32,t_contract(IClusterSelector)6612)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:132"
          },
          {
            "label": "receiverStaking",
            "offset": 0,
            "slot": "861",
            "type": "t_contract(ReceiverStaking)6440",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IClusterSelector)6612": {
            "label": "contract IClusterSelector",
            "numberOfBytes": "20"
          },
          "t_contract(ReceiverStaking)6440": {
            "label": "contract ReceiverStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_contract(IClusterSelector)6612)": {
            "label": "mapping(bytes32 => contract IClusterSelector)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4025_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4025_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3710_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3710_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "08d9b7a14c941c21c722f401a02084c5a8832061e891c64001c6c0914c567e5b": {
      "address": "0x039AB20A4c1e975975FB4bdd51de1DCd77526160",
      "txHash": "0x7f551a4698c775af7125be898f2c36728a76ad93f6eb8d76bfbef1af4399147b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4025_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:27"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:62"
          },
          {
            "label": "clusterRewards",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:120"
          },
          {
            "label": "rewardWeight",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:122"
          },
          {
            "label": "totalRewardWeight",
            "offset": 0,
            "slot": "853",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:123"
          },
          {
            "label": "totalRewardsPerEpoch",
            "offset": 0,
            "slot": "854",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:124"
          },
          {
            "label": "payoutDenomination",
            "offset": 0,
            "slot": "855",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:125"
          },
          {
            "label": "rewardDistributedPerEpoch",
            "offset": 0,
            "slot": "856",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:127"
          },
          {
            "label": "latestNewEpochRewardAt",
            "offset": 0,
            "slot": "857",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:128"
          },
          {
            "label": "rewardDistributionWaitTime",
            "offset": 0,
            "slot": "858",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:129"
          },
          {
            "label": "ticketsIssued",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:131"
          },
          {
            "label": "clusterSelectors",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_bytes32,t_contract(IClusterSelector)6602)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:132"
          },
          {
            "label": "receiverStaking",
            "offset": 0,
            "slot": "861",
            "type": "t_contract(ReceiverStaking)6430",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IClusterSelector)6602": {
            "label": "contract IClusterSelector",
            "numberOfBytes": "20"
          },
          "t_contract(ReceiverStaking)6430": {
            "label": "contract ReceiverStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_contract(IClusterSelector)6602)": {
            "label": "mapping(bytes32 => contract IClusterSelector)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4025_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4025_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3710_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3710_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "afa98e5ec6a042b8f854ca7edd5d1ec38e79c44b7e62c6a50432d6e288cfe2cd": {
      "address": "0x5eE1302f2644C50eAf21E8E56a15B38E43222F4D",
      "txHash": "0x2b6a5066ed48f652575c678f26f827a11ba41d1fd40469bfbb8fe13076885158",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:26"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:61"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_bytes32,t_struct(Lock)9021_storage)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:91"
          },
          {
            "label": "lockWaitTime",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:92"
          },
          {
            "label": "clusters",
            "offset": 0,
            "slot": "853",
            "type": "t_mapping(t_address,t_struct(Cluster)9133_storage)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:134"
          },
          {
            "label": "clientKeys",
            "offset": 0,
            "slot": "854",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:135"
          },
          {
            "label": "rewardDelegators",
            "offset": 0,
            "slot": "855",
            "type": "t_contract(IRewardDelegators)17605",
            "contract": "ClusterRegistry",
            "src": "contracts/staking/ClusterRegistry.sol:137"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IRewardDelegators)17605": {
            "label": "contract IRewardDelegators",
            "numberOfBytes": "20"
          },
          "t_enum(Status)9121": {
            "label": "enum ClusterRegistry.Status",
            "members": ["NOT_REGISTERED", "REGISTERED"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Cluster)9133_storage)": {
            "label": "mapping(address => struct ClusterRegistry.Cluster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Lock)9021_storage)": {
            "label": "mapping(bytes32 => struct ClusterRegistry.Lock)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Cluster)9133_storage": {
            "label": "struct ClusterRegistry.Cluster",
            "members": [
              {
                "label": "networkId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commission",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "clientKey",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(Status)9121",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Lock)9021_storage": {
            "label": "struct ClusterRegistry.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "376134ee756dad62caa607e109cdc8b6f9f6d8b700cc9de22881aaf72eebbfaa": {
      "address": "0xE3c63433Be3B079F3C570959Cfc974B08e2bcF0a",
      "txHash": "0x23c60437775af7f735a93cf1b852eaec5c5a6ca5f675077b2c1517fa1b3246b3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:31"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:71"
          },
          {
            "label": "clusters",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_address,t_struct(Cluster)13312_storage)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:146"
          },
          {
            "label": "stakeAddress",
            "offset": 0,
            "slot": "852",
            "type": "t_address",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:148"
          },
          {
            "label": "rewardFactor",
            "offset": 0,
            "slot": "853",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:149"
          },
          {
            "label": "tokenIndex",
            "offset": 0,
            "slot": "854",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:150"
          },
          {
            "label": "tokenList",
            "offset": 0,
            "slot": "855",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:151"
          },
          {
            "label": "clusterRewards",
            "offset": 0,
            "slot": "856",
            "type": "t_contract(IClusterRewards)17360",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:152"
          },
          {
            "label": "clusterRegistry",
            "offset": 0,
            "slot": "857",
            "type": "t_contract(IClusterRegistry)17287",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:153"
          },
          {
            "label": "PONDToken",
            "offset": 0,
            "slot": "858",
            "type": "t_contract(IERC20Upgradeable)1962",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:154"
          },
          {
            "label": "thresholdForSelection",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:156"
          },
          {
            "label": "tokenWeights",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_bytes32,t_struct(TokenWeight)13317_storage)",
            "contract": "RewardDelegators",
            "src": "contracts/staking/RewardDelegators.sol:157"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IClusterRegistry)17287": {
            "label": "contract IClusterRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IClusterRewards)17360": {
            "label": "contract IClusterRewards",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1962": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Cluster)13312_storage)": {
            "label": "mapping(address => struct RewardDelegators.Cluster)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(TokenWeight)13317_storage)": {
            "label": "mapping(bytes32 => struct RewardDelegators.TokenWeight)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Cluster)13312_storage": {
            "label": "struct RewardDelegators.Cluster",
            "members": [
              {
                "label": "totalDelegations",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delegators",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accRewardPerShare",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenWeight)13317_storage": {
            "label": "struct RewardDelegators.TokenWeight",
            "members": [
              {
                "label": "forThreshold",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "forDelegation",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "695a94e9164e58332a27f640c26525c05a3ac0bb1bd7e8aa2d12cc0d9391645c": {
      "address": "0x7819f1B4252967875Fb5b01c73EaDAe801529dF7",
      "txHash": "0x12d20e4886ed29cf2af25f58ce1799de21d2c1f0e5ef9e44aedea37a078212b9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap0",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:27"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "801",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:62"
          },
          {
            "label": "clusterRewards",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:120"
          },
          {
            "label": "rewardWeight",
            "offset": 0,
            "slot": "852",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:122"
          },
          {
            "label": "totalRewardWeight",
            "offset": 0,
            "slot": "853",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:123"
          },
          {
            "label": "totalRewardsPerEpoch",
            "offset": 0,
            "slot": "854",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:124"
          },
          {
            "label": "payoutDenomination",
            "offset": 0,
            "slot": "855",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:125"
          },
          {
            "label": "rewardDistributedPerEpoch",
            "offset": 0,
            "slot": "856",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:127"
          },
          {
            "label": "latestNewEpochRewardAt",
            "offset": 0,
            "slot": "857",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:128"
          },
          {
            "label": "rewardDistributionWaitTime",
            "offset": 0,
            "slot": "858",
            "type": "t_uint256",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:129"
          },
          {
            "label": "ticketsIssued",
            "offset": 0,
            "slot": "859",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:131"
          },
          {
            "label": "clusterSelectors",
            "offset": 0,
            "slot": "860",
            "type": "t_mapping(t_bytes32,t_contract(IClusterSelector)10117)",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:132"
          },
          {
            "label": "receiverStaking",
            "offset": 0,
            "slot": "861",
            "type": "t_contract(ReceiverStaking)8011",
            "contract": "ClusterRewards",
            "src": "contracts/staking/ClusterRewards.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IClusterSelector)10117": {
            "label": "contract IClusterSelector",
            "numberOfBytes": "20"
          },
          "t_contract(ReceiverStaking)8011": {
            "label": "contract ReceiverStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_contract(IClusterSelector)10117)": {
            "label": "mapping(bytes32 => contract IClusterSelector)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4342_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4027_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4027_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c2d54b70ae17f77b8f2664b64772faa12659fe6709602b87349718e4a6b656a6": {
      "address": "0xd6a3B3e52aEE27189bFAdC001207Bad5065c6999",
      "txHash": "0xfef420e7c0c877076454cc375c9cc6ea51f3e51ce1c833775e27d5e4518c9013",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(Snapshots)10307_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:68"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Snapshots)10307_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:70"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)2792_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "contracts/staking/lib/ERC20SnapshotUpgradeable.sol:208"
          },
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:24"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "901",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:63"
          },
          {
            "label": "signerToStaker",
            "offset": 0,
            "slot": "951",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:92"
          },
          {
            "label": "stakerToSigner",
            "offset": 0,
            "slot": "952",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ReceiverStaking",
            "src": "contracts/staking/ReceiverStaking.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)10307_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4342_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4027_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2792_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4027_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)10307_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f34d2f6c9333501c7b5b73eb8ec71c0a474a66b47f308e69d98818a401bf9cc2": {
      "address": "0xE5E479b6D490E98Ce0d7CC3859e56b02F5e66A72",
      "txHash": "0x97c423ab9f6dd2d575156cb7b7e1e3bba78780002223e189a800adbce9a1b5d1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "addressToIndexMap",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:28"
          },
          {
            "label": "indexToAddressMap",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:31"
          },
          {
            "label": "nodes",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_struct(Node)10651_storage)dyn_storage",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)47_storage",
            "contract": "TreeUpgradeable",
            "src": "contracts/staking/tree/TreeUpgradeable.sol:36"
          },
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)500_storage",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:31"
          },
          {
            "label": "clustersSelected",
            "offset": 0,
            "slot": "851",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:100"
          },
          {
            "label": "__unused1",
            "offset": 0,
            "slot": "852",
            "type": "t_uint256",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:102"
          },
          {
            "label": "__unused",
            "offset": 0,
            "slot": "853",
            "type": "t_address",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:103"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "854",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ClusterSelector",
            "src": "contracts/staking/ClusterSelector.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Node)10651_storage)dyn_storage": {
            "label": "struct TreeUpgradeable.Node[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4342_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4342_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4027_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Node)10651_storage": {
            "label": "struct TreeUpgradeable.Node",
            "members": [
              {
                "label": "value",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "leftSum",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "rightSum",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4027_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9a48c4b860420275e61ce63b9ff36ccbf96fff65634cf35335c2c3c4c703537d": {
      "address": "0x0b816B41ec962F6Ca27DaB95B4eba492d0091A0B",
      "txHash": "0xabb9cf538d5fceeb8d4b00e9cb7061c2b209529de65044d4db40eab04944c19b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(Lock)8614_storage)",
            "contract": "LockUpgradeable",
            "src": "contracts/lock/LockUpgradeable.sol:18"
          },
          {
            "label": "lockWaitTime",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LockUpgradeable",
            "src": "contracts/lock/LockUpgradeable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)48_storage",
            "contract": "LockUpgradeable",
            "src": "contracts/lock/LockUpgradeable.sol:21"
          },
          {
            "label": "__gap_0",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)500_storage",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:27"
          },
          {
            "label": "__gap_1",
            "offset": 0,
            "slot": "851",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:62"
          },
          {
            "label": "providers",
            "offset": 0,
            "slot": "901",
            "type": "t_mapping(t_address,t_struct(Provider)5775_storage)",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:97"
          },
          {
            "label": "__gap_2",
            "offset": 0,
            "slot": "902",
            "type": "t_array(t_uint256)49_storage",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:99"
          },
          {
            "label": "jobs",
            "offset": 0,
            "slot": "951",
            "type": "t_mapping(t_bytes32,t_struct(Job)5971_storage)",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:158"
          },
          {
            "label": "jobIndex",
            "offset": 0,
            "slot": "952",
            "type": "t_uint256",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:159"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "953",
            "type": "t_contract(IERC20)4858",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:161"
          },
          {
            "label": "__gap_3",
            "offset": 0,
            "slot": "954",
            "type": "t_array(t_uint256)47_storage",
            "contract": "MarketV1",
            "src": "contracts/enclaves/MarketV1.sol:163"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4858": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Provider)5775_storage)": {
            "label": "mapping(address => struct MarketV1.Provider)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4493_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Job)5971_storage)": {
            "label": "mapping(bytes32 => struct MarketV1.Job)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Lock)8614_storage)": {
            "label": "mapping(bytes32 => struct LockUpgradeable.Lock)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4493_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4178_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Job)5971_storage": {
            "label": "struct MarketV1.Job",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "provider",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastSettled",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Lock)8614_storage": {
            "label": "struct LockUpgradeable.Lock",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Provider)5775_storage": {
            "label": "struct MarketV1.Provider",
            "members": [
              {
                "label": "cp",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
